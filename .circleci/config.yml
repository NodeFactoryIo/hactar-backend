version: 2
jobs:
  build:
    working_directory: ~/app
    machine:
      image: ubuntu-1604:201903-01
    steps:
    - checkout
    - run: chown -R $USER:$USER ~/app
    - restore_cache:
        keys:
        - v2-docker-{{ .Branch }}
    - run:
        name: Load Docker layers cache
        command: |
          set +o pipefail
          docker load -i ~/docker-layers.tar || true
    - run:
        name: Build application Docker image
        command: |
          export IMAGE_TAG=$CIRCLE_SHA1
          docker-compose build
    - run:
        name: Tag docker image as latest
        command: |
          docker tag nodefactory/hactar-backend:${CIRCLE_SHA1} nodefactory/hactar-backend:latest
    - run:
        name: Run code linter
        command: docker-compose run --rm --no-deps backend yarn run lint
    - run:
        name: Set coveralls variables
        command: |
          touch .coveralls.env
          echo "COVERALLS_SERVICE_NAME=circle-ci" >> .coveralls.env
          echo "CIRCLECI=true" >> .coveralls.env
          echo "COVERALLS_REPO_TOKEN=${COVERALLS_REPO_TOKEN}" >> .coveralls.env
          echo "CIRCLE_BUILD_NUM=${CIRCLE_BUILD_NUM}" >> .coveralls.env
          echo "CIRCLE_BUILD_NUM=${CIRCLE_BUILD_NUM}" >> .coveralls.env
          echo "CI_PULL_REQUEST=${CI_PULL_REQUEST}" >> .coveralls.env
          echo "CIRCLE_SHA1=${CIRCLE_SHA1}" >> .coveralls.env
          echo "CIRCLE_BRANCH=${CIRCLE_BRANCH}" >> .coveralls.env
    - run:
        name: Send test results to Coveralls
        command: |
          docker run --env-file .coveralls.env nodefactory/hactar-backend:${CIRCLE_SHA1} sh -c "yarn run test:unit && yarn run coveralls"
#    - run:
#        name: Run e2e tests
#        command: docker-compose run -e NODE_ENV=test --rm backend yarn run test:e2e
    - run:
        name: Save docker layers cache
        command: |
          docker save -o ~/docker-layers.tar node:12.13-alpine
          docker save -o ./image.tar nodefactory/hactar-backend:latest
    - save_cache:
        key: v2-docker-{{ .Branch }}-{{ epoch }}
        paths:
        - ~/docker-layers.tar
    - persist_to_workspace:
        root: ./
        paths:
        - ./image.tar
workflows:
  version: 2
  build-deploy:
    jobs:
      - build
