swagger: '2.0'
info:
  description: Node.js backend application for Hactar (Filecoin tool for mining analysis)
  version: 1.0.0
  title: Hactar backend
paths:
  /user/node:
    post:
      tags:
        - Node
      summary: Add a new node
      description: ''
      parameters:
        - in: body
          name: Node
          description: Node object to be added to the database
          required: true
          schema:
            $ref: '#/definitions/Node'
      responses:
        '201':
          schema:
            $ref: '#/definitions/Node_response'
        '403':
          description: Unauthorized user.
        '500':
          description: An unknown error occurred.
    get:
      tags:
        - Node
      summary: Get all current user nodes
      description: ''
      responses:
        '200':
          schema:
            $ref: '#/definitions/Node_response'
        '403':
          description: Unauthorized user.
        '500':
          description: An unknown error occurred.
  /user/nodes/details:
    get:
      tags:
        - Node
      summary: Get all current user nodes with details
      description: ''
      responses:
        '200':
          schema:
            type: object
            properties:
              node:
                $ref: '#/definitions/Node_response'
              latestUptime:
                $ref: '#/definitions/NodeUptime_response'
              latestDiskInformation:
                $ref: '#/definitions/NodeDiskInformation_response'
        '403':
          description: Unauthorized user.
        '500':
          description: An unknown error occurred.
  '/user/node/{nodeId}':
    put:
      tags:
        - Node
      summary: Create/update node name/description
      description: Returns updated node
      parameters:
        - in: path
          name: nodeId
          description: ID of the node to update
          required: true
          type: integer
      responses:
        '200':
          schema:
            $ref: '#/definitions/Node_response'
        '403':
          description: Unauthorized user.
        '500':
          description: An unknown error occurred.
    delete:
      tags:
        - Node
      summary: Delete node
      description: Returns deleted node
      parameters:
        - in: path
          name: nodeId
          description: ID of the node to delete
          required: true
          type: integer
      responses:
        '200':
          schema:
            $ref: '#/definitions/Node_response'
        '403':
          description: Unauthorized user.
        '500':
          description: An unknown error occurred.
  /user/node/diskinformation:
    post:
      tags:
        - Node disk information
      summary: Add new node disk information
      description: ''
      parameters:
        - in: body
          name: Node disk information
          description: Node disk information object to be added to the database
          required: true
          schema:
            $ref: '#/definitions/NodeDiskInformation'
      responses:
        '201':
          schema:
            $ref: '#/definitions/NodeDiskInformation_response'
        '403':
          description: Unauthorized user.
        '500':
          description: An unknown error occurred.
  '/user/node/diskinformation/{nodeId}?filter={period}':
    get:
      tags:
        - Node disk information
      summary: Get all disk information of a node
      description: ''
      parameters:
        - in: path
          name: nodeId
          description: ID of the node to fetch data
          required: true
          type: integer
          schema:
            $ref: '#/definitions/NodeDiskInformation'
        - in: query
          name: filter
          description: 'Returns results - hourly for day, daily for other filters'
          required: true
          items:
            type: string
            enum:
              - day
              - week
              - month
              - year
      responses:
        '200':
          schema:
            $ref: '#/definitions/NodeDiskInformation_response'
        '403':
          description: Unauthorized user.
        '500':
          description: An unknown error occurred.
  /user/node/uptime:
    post:
      tags:
        - Node uptime
      summary: Add new node uptime
      description: ''
      parameters:
        - in: body
          name: Node uptime
          description: Node uptime object to be added to the database
          required: true
          schema:
            $ref: '#/definitions/NodeUptime'
      responses:
        '201':
          schema:
            $ref: '#/definitions/NodeUptime_response'
        '403':
          description: Unauthorized user.
        '500':
          description: An unknown error occurred.
  '/user/node/uptime/{nodeId}?filter={period}':
    get:
      tags:
        - Node uptime
      summary: Get all uptime of a node
      description: ''
      parameters:
        - in: path
          name: nodeId
          description: ID of the node to fetch data
          required: true
          type: integer
          schema:
            $ref: '#/definitions/NodeUptime'
        - in: query
          name: filter
          description: 'Returns results - hourly for day, daily for other filters'
          required: true
          items:
            type: string
            enum:
              - day
              - week
              - month
              - year
      responses:
        '200':
          schema:
            $ref: '#/definitions/NodeUptime_response'
        '403':
          description: Unauthorized user.
        '500':
          description: An unknown error occurred.
  /user/node/generalminerinfo:
    put:
      tags:
        - Node general miner info
      summary: Add new general miner info
      description: ''
      parameters:
        - in: body
          name: General miner info
          description: General miner info object to be added to the database
          required: true
          schema:
            $ref: '#/definitions/GeneralMinerInfo'
      responses:
        '200':
          schema:
            $ref: '#/definitions/GeneralMinerInfo_response'
        '403':
          description: Unauthorized user.
        '500':
          description: An unknown error occurred.
  '/user/node/generalminerinfo/{nodeId}':
    get:
      tags:
        - Node general miner info
      summary: Get general miner info of a node
      description: ''
      parameters:
        - in: path
          name: nodeId
          description: ID of the node to fetch data
          required: true
          type: integer
          schema:
            $ref: '#/definitions/GeneralMinerInfo'
      responses:
        '200':
          schema:
            $ref: '#/definitions/GeneralMinerInfo_response'
        '403':
          description: Unauthorized user.
        '500':
          description: An unknown error occurred.
  /user/node/miningrewards:
    post:
      tags:
        - Node mining rewards
      summary: Add new mining rewards
      description: ''
      parameters:
        - in: body
          name: Mining rewards
          description: Mining reward object (or array of) to be added to the database
          required: true
          schema:
            $ref: '#/definitions/MiningRewards'
      responses:
        '201':
          schema:
            $ref: '#/definitions/MiningRewards_response'
        '403':
          description: Unauthorized user.
        '500':
          description: An unknown error occurred.
  '/user/node/miningrewards/{nodeId}?filter={period}':
    get:
      tags:
        - Node mining rewards
      summary: Get all mining rewards of a node
      description: ''
      parameters:
        - in: path
          name: nodeId
          description: ID of the node to fetch data
          required: true
          type: integer
          schema:
            $ref: '#/definitions/MiningRewards'
        - in: query
          name: filter
          description: 'Returns results - hourly for day, daily for other filters'
          required: true
          items:
            type: string
            enum:
              - day
              - week
              - month
              - year
      responses:
        '200':
          schema:
            $ref: '#/definitions/MiningRewards_response'
        '403':
          description: Unauthorized user.
        '500':
          description: An unknown error occurred.
  /user/node/balance:
    post:
      tags:
        - Node balance
      summary: Add new node balance
      description: ''
      parameters:
        - in: body
          name: Node Balance
          description: Node balance object to be added to the database
          required: true
          schema:
            $ref: '#/definitions/NodeBalance'
      responses:
        '201':
          schema:
            $ref: '#/definitions/NodeBalance_response'
        '403':
          description: Unauthorized user.
        '500':
          description: An unknown error occurred.
  '/user/node/balance/{nodeId}':
    get:
      tags:
        - Node balance
      summary: Get balance of a node
      description: ''
      parameters:
        - in: path
          name: nodeId
          description: ID of the node to fetch data
          required: true
          type: integer
          schema:
            $ref: '#/definitions/NodeBalance'
      responses:
        '200':
          schema:
            $ref: '#/definitions/NodeBalance_response'
        '403':
          description: Unauthorized user.
        '500':
          description: An unknown error occurred.
  /user/node/pastdeals:
    put:
      tags:
        - Node past deals
      summary: Add new node past deals
      description: ''
      parameters:
        - in: body
          name: Node past deals
          description: Node past deals object (or array of) to be added to the database
          required: true
          schema:
            $ref: '#/definitions/NodePastDeals'
      responses:
        '200':
          schema:
            $ref: '#/definitions/NodePastDeals_response'
        '403':
          description: Unauthorized user.
        '500':
          description: An unknown error occurred.
  '/user/node/pastdeals/{nodeId}?from={integer}&to={integer}&orderBy={order}':
    get:
      tags:
        - Node past deals
      summary: Get all past deals of a node
      description: ''
      parameters:
        - in: path
          name: nodeId
          description: ID of the node to fetch data
          required: true
          type: integer
          schema:
            $ref: '#/definitions/NodePastDeals'
        - in: query
          name: from
          description: Returns results - starting number
          required: true
          type: unsigned integer
        - in: query
          name: to
          description: Returns results - ending number
          required: true
          type: unsigned integer
        - in: query
          name: orderBy
          description: Returns results ascending or descending
          required: true
          items:
            type: string
            enum:
              - asc
              - desc
      responses:
        '200':
          schema:
            $ref: '#/definitions/NodePastDeals_response'
        '403':
          description: Unauthorized user.
        '500':
          description: An unknown error occurred.
  '/user/node/pastdeals/{nodeId}/count':
    get:
      tags:
        - Node past deals
      summary: Get node past deals count
      description: ''
      parameters:
        - in: path
          name: Node past deals
          description: Get count of past deals of a node
          required: true
          schema:
            $ref: '#/definitions/NodePastDeals'
      responses:
        '200':
          schema:
            $ref: '#/definitions/NodePastDeals_response'
        '403':
          description: Unauthorized user.
        '500':
          description: An unknown error occurred.
  /user/register:
    post:
      tags:
        - User
      summary: Add a new user
      description: ''
      parameters:
        - in: body
          name: User
          description: User object to be added to the database
          required: true
          schema:
            $ref: '#/definitions/User'
      responses:
        '201':
          schema:
            $ref: '#/definitions/User_response'
        '500':
          description: An unknown error occurred.
  /user/login:
    post:
      tags:
        - User
      summary: Login existing user via client app
      description: ''
      parameters:
        - in: body
          name: User
          description: Returns JWT for the user
          required: true
          schema:
            type: object
            properties:
              token:
                type: string
      responses:
        '200':
          schema:
            type: object
            properties:
              token:
                type: string
        '500':
          description: An unknown error occurred.
  /user/daemon/login:
    post:
      tags:
        - User
      summary: Login existing user via daemon app
      description: ''
      parameters:
        - in: body
          name: User
          description: Returns JWT for the user
          required: true
          schema:
            type: object
            properties:
              token:
                type: string
      responses:
        '200':
          schema:
            type: object
            properties:
              token:
                type: string
        '500':
          description: An unknown error occurred.
  /user/account:
    get:
      tags:
        - User
      summary: Get current user account information
      description: ''
      responses:
        '200':
          schema:
            $ref: '#/definitions/User_response'
        '403':
          description: Unauthorized user.
        '500':
          description: An unknown error occurred.
    put:
      tags:
        - User
      summary: Update user attributes
      description: Returns user object with updated attributes
      responses:
        '200':
          schema:
            $ref: '#/definitions/User_response'
        '403':
          description: Unauthorized user.
        '500':
          description: An unknown error occurred.
definitions:
  GeneralMinerInfo:
    type: object
    required:
      - version
      - walletAddress
      - sectorSize
      - numberOfSectors
      - minerPower
      - totalPower
      - nodeInfo
    properties:
      version:
        type: string
      walletAddress:
        type: string
      sectorSize:
        type: string
      numberOfSectors:
        type: number
      minerPower:
        type: string
      totalPower:
        type: string
      nodeInfo:
        type: object
        required:
          - address
          - url
        properties:
          address:
            type: string
          url:
            type: string
  MiningRewards:
    type: object
    required:
      - cid
      - reward
      - nodeInfo
    properties:
      cid:
        type: string
      reward:
        type: string
      nodeInfo:
        type: object
        required:
          - address
          - url
        properties:
          address:
            type: string
          url:
            type: string
  NodeBalance:
    type: object
    required:
      - balance
      - nodeInfo
    properties:
      balance:
        type: string
      nodeInfo:
        type: object
        required:
          - address
          - url
        properties:
          address:
            type: string
          url:
            type: string
  Node:
    type: object
    required:
      - token
      - nodeInfo
    properties:
      token:
        type: integer
      nodeInfo:
        type: object
        required:
          - address
          - url
        properties:
          address:
            type: string
          url:
            type: string
      name:
        type: string
      description:
        type: string
      hasEnabledNotifications:
        type: boolean
  NodeDiskInformation:
    type: object
    required:
      - freeSpace
      - takenSpace
      - nodeInfo
    properties:
      freeSpace:
        type: string
      takenSpace:
        type: string
      nodeInfo:
        type: object
        required:
          - address
          - url
        properties:
          address:
            type: string
          url:
            type: string
  NodePastDeals:
    type: object
    required:
      - pastDeals
      - nodeInfo
    properties:
      pastDeals:
        type: object
        required:
          - cid
          - state
          - size
          - provider
          - price
          - duration
        properties:
          cid:
            type: string
          state:
            type: number
          size:
            type: string
          provider:
            type: string
          price:
            type: string
          duration:
            type: number
      nodeInfo:
        type: object
        required:
          - address
          - url
        properties:
          address:
            type: string
          url:
            type: string
  NodeUptime:
    type: object
    required:
      - isWorking
      - nodeInfo
    properties:
      isWorking:
        type: boolean
      nodeInfo:
        type: object
        required:
          - address
          - url
        properties:
          address:
            type: string
          url:
            type: string
  User:
    type: object
    required:
      - email
      - hash_password
    properties:
      email:
        type: string
      hash_password:
        type: string
  GeneralMinerInfo_response:
    type: object
    properties:
      id:
        type: integer
      version:
        type: string
      walletAddress:
        type: string
      sectorSize:
        type: string
      numberOfSectors:
        type: number
      minerPower:
        type: string
      totalPower:
        type: string
      createdAt:
        type: string
        format: date-time
      updatedAt:
        type: string
        format: date-time
      nodeId:
        type: integer
  MiningRewards_response:
    type: object
    properties:
      id:
        type: integer
      cid:
        type: string
      reward:
        type: string
      createdAt:
        type: string
        format: date-time
      updatedAt:
        type: string
        format: date-time
      nodeId:
        type: integer
  NodeBalance_response:
    type: object
    properties:
      id:
        type: integer
      balance:
        type: string
      createdAt:
        type: string
        format: date-time
      updatedAt:
        type: string
        format: date-time
      nodeId:
        type: integer
  Node_response:
    type: object
    properties:
      id:
        type: integer
      token:
        type: integer
      name:
        type: string
      description:
        type: string
      hasEnabledNotifications:
        type: boolean
      createdAt:
        type: string
        format: date-time
      updatedAt:
        type: string
        format: date-time
      userId:
        type: integer
  NodeDiskInformation_response:
    type: object
    properties:
      id:
        type: integer
      freeSpace:
        type: string
      takenSpace:
        type: string
      createdAt:
        type: string
        format: date-time
      updatedAt:
        type: string
        format: date-time
      nodeId:
        type: integer
  NodePastDeals_response:
    type: object
    properties:
      id:
        type: integer
      pastDeals:
        type: object
        properties:
          cid:
            type: string
          state:
            type: number
          size:
            type: string
          provider:
            type: string
          price:
            type: string
          duration:
            type: number
          createdAt:
            type: string
            format: date-time
          updatedAt:
            type: string
            format: date-time
          nodeId:
            type: integer
  NodeUptime_response:
    type: object
    properties:
      id:
        type: integer
      isWorking:
        type: boolean
      createdAt:
        type: string
        format: date-time
      updatedAt:
        type: string
        format: date-time
      nodeId:
        type: integer
  User_response:
    type: object
    properties:
      id:
        type: integer
      email:
        type: string
      hash_password:
        type: string
      createdAt:
        type: string
        format: date-time
      updatedAt:
        type: string
        format: date-time
